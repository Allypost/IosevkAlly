// vim: set autoindent expandtab tabstop=2 shiftwidth=2:

import "package://pkg.pkl-lang.org/pkl-pantry/pkl.toml@1.0.0#/toml.pkl"

withLigation = true

base {
  when (withLigation) {
    spacing = "term"
  } else {
    spacing = "fixed"
    noLigation = true
  }
  // noCvSs = false
  exportGlyphNames = true
  buildTextureFeature = true

  variants {
    design {
      `apl-form` = "enable"
      `zero` = "oval-tall-slashed"
      `one` = "base-long-top-serif"
      `six` = "open-contour"
      `nine` = "open-contour"
      `asterisk` = "penta-mid"
      `at` = "fourfold"
      `cent` = "through-cap"
      `guillemet` = "straight"
      `number-sign` = "upright-tall"
      `percent` = "rings-continuous-slash"
      `question` = "corner"
      `pilcrow` = "low"
      `lig-ltgteq` = "slanted"
      `lig-neq` = "slightly-slanted"
      `lig-equal-chain` = "without-notch"
      `lig-hyphen-chain` = "without-notch"
      `lig-double-arrow-bar` = "without-notch"
      `lig-single-arrow-bar` = "without-notch"
    }

    italic = (design) {
      `f` = "tailed"
    }
  }

  widths {
    Normal {
      shape = 548
      menu = 5
      css = "normal"
    }
  }

  slopes {
    Upright {
      angle = 0
      shape = "upright"
      menu = "upright"
      css = "normal"
    }

    Italic {
      angle = 9.4
      shape = "italic"
      menu = "italic"
      css = "italic"
    }
  }

  when (withLigation) {
    ligations {
      inherits = "dlig"
      enables = new Listing {
        "hash-hash"
        "hash-hash-hash"
      }
      disables = new Listing {
        "eqeq"
        "eqeqeq"
        "exeq"
        "exeqeq"
        "exeqeqeq"
      }
    }
  }
}

IosevkAlly = (base) {
  family = "IosevkAlly"
  serifs = "sans"
  variants {
    design {
      `capital-b` = "more-asymmetric-serifless"
      `capital-c` = "serifless"
      `capital-d` = "more-rounded-serifless"
      `capital-f` = "serifless"
      `capital-h` = "serifless"
      `capital-m` = "slanted-sides-hanging-serifless"
      `capital-n` = "standard-serifless"
      `capital-r` = "straight-serifless"
      `capital-z` = "straight-serifless"
      `a` = "double-storey-serifless"
      `g` = "double-storey"
      `k` = "straight-serifless"
      `m` = "top-left-serifed"
      `y` = "cursive-serifless"
      `seven` = "bend-serifless"
      // `micro-sign` = "toothed-bottom-right-serifed"
    }
  }
}

IosevkAllyP = (IosevkAlly) {
  family = "IosevkAllyP"
  spacing = "quasi-proportional"
}

IosevkAllyS = (base) {
  family = "IosevkAllyS"
  serifs = "slab"

  variants {
    design {
      `capital-c` = "serifless"
      `capital-d` = "more-rounded-bilateral-serifed"
      `capital-g` = "toothed-serifed-capped"
      `capital-m` = "slanted-sides-flat-bottom-serifed"
      `capital-q` = "crossing-baseline"
      `a` = "double-storey-tailed"
      `c` = "serifless"
      `g` = "double-storey"
      `s` = "bilateral-serifed"
      `y` = "cursive-serifed"
    }
  }
}

IosevkAllySP = (IosevkAllyS) {
  family = "IosevkAllySP"
  spacing = "quasi-proportional"
}

output {
  value = new Mapping {
    ["buildPlans"] = new Mapping {
      ["IosevkAlly"] = IosevkAlly
      ["IosevkAllyP"] = IosevkAllyP
      // ["IosevkAllyS"] = IosevkAllyS
      ["IosevkAllySP"] = IosevkAllySP
    }
    ["collectPlans"] = new Mapping {
      ["IosevkAlly"] = new {
        ["from"] = new Listing {
          IosevkAlly.family
        }
      }
      ["IosevkAllyP"] = new {
        ["from"] = new Listing {
          IosevkAllyP.family
        }
      }
      ["IosevkAllySP"] = new {
        ["from"] = new Listing {
          IosevkAllySP.family
        }
      }
    }
  }
  renderer = new toml.Renderer {}
}
